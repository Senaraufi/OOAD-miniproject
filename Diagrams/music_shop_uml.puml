@startuml MusicShopSystem

' Style and theme settings
!theme plain
skinparam backgroundColor transparent
skinparam classAttributeIconSize 0
skinparam roundcorner 5
skinparam shadowing false

skinparam class {
    BackgroundColor #F8F9FA
    BorderColor #2C3E50
    ArrowColor #2C3E50
    FontColor #2C3E50
    AttributeFontColor #2C3E50
    StereotypeFontColor #2C3E50
}

skinparam packageStyle rectangle

' Title
title Music Shop Management System - Class Diagram

' Packages
package Model {
    ' Interfaces
    interface Purchasable {
        + {abstract} purchaseItem(): void
        + {abstract} returnItem(): void
    }

    ' Abstract Classes
    abstract class Product {
        - name: String
        - price: double
        - imageFileName: String
        # stock: int
        + Product(name: String, price: double, imageFileName: String)
        + getName(): String
        + getPrice(): double
        + getImageFileName(): String
        + getStock(): int
        + updateStock(quantity: int): void
        + {abstract} getDetails(): String
    }

    ' Concrete Classes
    class Album {
        - artist: String
        - genre: Genre
        + Album(name: String, price: double, artist: String, genre: Genre)
        + getArtist(): String
        + getGenre(): Genre
        + getDetails(): String
    }

    class CD {
        - artist: String
        - genre: Genre
        - numberOfTracks: int
        - duration: int
        + CD(name: String, price: double, artist: String, genre: Genre)
        + getArtist(): String
        + getGenre(): Genre
        + getNumberOfTracks(): int
        + getDuration(): int
        + getDetails(): String
    }

    class Customer {
        - name: String
        - email: String
        - purchaseHistory: List<Sale>
        + Customer(name: String, email: String)
        + getName(): String
        + getEmail(): String
        + addPurchase(sale: Sale): void
        + getPurchaseHistory(): List<Sale>
    }

    class Employee {
        - id: String
        - name: String
        - role: Role
        - salary: double
        - hireDate: LocalDate
        + Employee(id: String, name: String, role: Role)
        + getId(): String
        + getName(): String
        + getRole(): Role
        + getSalary(): double
        + getHireDate(): LocalDate
        + setSalary(salary: double): void
        + setRole(role: Role): void
    }

    class EmployeeData {
        - employees: List<Employee>
        + addEmployee(employee: Employee): void
        + removeEmployee(employee: Employee): void
        + getEmployees(): List<Employee>
        + findEmployeeById(id: String): Employee
        + updateEmployee(employee: Employee): void
    }

    class Sale {
        - id: UUID
        - customer: Customer
        - products: List<Product>
        - totalAmount: double
        - date: LocalDateTime
        + Sale(customer: Customer, products: List<Product>)
        + getId(): UUID
        + getCustomer(): Customer
        + getProducts(): List<Product>
        + getTotalAmount(): double
        + getDate(): LocalDateTime
    }

    class ShoppingCart {
        - items: List<Product>
        - customer: Customer
        + addItem(product: Product): void
        + removeItem(product: Product): void
        + getItems(): List<Product>
        + getTotalPrice(): double
        + checkout(): Sale
        + clear(): void
    }
}

package GUI {
    class MusicShopGUI {
        - frame: JFrame
        - productPanel: JPanel
        - cartPanel: JPanel
        + initialize(): void
        - createProductPanel(): void
        - createCartPanel(): void
        - updateUI(): void
    }

    class EmployeeRosterGUI {
        - frame: JFrame
        - employeeTable: JTable
        + initialize(): void
        - createEmployeePanel(): void
        - updateEmployeeTable(): void
    }

    class AlbumListCellRenderer {
        + getListCellRendererComponent(): Component
    }
}

package Enums {
    enum Genre {
        ROCK
        POP
        JAZZ
        CLASSICAL
        HIPHOP
        ELECTRONIC
    }

    enum Role {
        MANAGER
        SALES_ASSOCIATE
        INVENTORY_CLERK
        CASHIER
    }
}

' Relationships
Product <|-- Album
Product <|-- CD
Product ..|> Purchasable

Customer "1" -- "*" Sale
Sale "*" -- "*" Product

ShoppingCart "1" -- "1" Customer
ShoppingCart "*" -- "*" Product

EmployeeData "1" -- "*" Employee
Employee -- Role

MusicShopGUI -- ShoppingCart
MusicShopGUI -- Product
EmployeeRosterGUI -- EmployeeData

Album -- Genre
CD -- Genre

@enduml
